--İLİŞKİSEL VERİTABANI
--PRIMARY KEY:BİR TABLONUN TEKİLLİĞİNİ,BENZERSİZLİĞİNİ SAĞLAYAN DEĞER
--FOREIGN KEY:BAŞKA BİR TABLODAN REFERANS OLARAK GÖSTERİLEN

--İLİŞKİSEL TABLOLARDAN VERİ SORGULAMA
--SELECT A.KOLON1, A.KOLON2, B.KOLON3, B.KOLON4 FROM TABLO1 A,TABLO2 B WHERE A.PK_KOLON=B.FK_KOLON
--SELECT U.USERNAME,U.NAMESURNAME,U.EMAIL,U.BIRTHDATE, C.COUNTRY,CT.CITY,T.TOWN,D.DISTRICT,A.POSTALCODE,A.ADDRESSTEXT FROM USER U, ADRESS A, COUNTRIES C,CITIES CT, TOWNS T,DISTRICTS D,
--WHERE U.ID=A.USERID AND C.ID=A.COUNTRYID AND CT.ID=A.CITYID AND T.ID=A.TOWNID AND D.ID=A.DISTRICTID

--JOIN
--SELECT A.KOLON1, A.KOLON2, B.KOLON3, B.KOLON4 FROM TABLO1 A JOIN TABLO2 B ON A.PK_KOLON=B.FK_KOLON

--SELECT U.USERNAME,U.NAMESURNAME,U.EMAIL,U.BIRTHDATE, A.POSTALCODE,A.ADDRESSTEXT,  C.COUNTRY,CT.CITY,T.TOWN,D.DISTRICT FROM USERS U 
--JOIN ADRESS A ON U.ID=A.USERID
--JOIN COUNTRIES C ON C.ID=A.COUNTRYID
--JOIN CTIES CT ON CT.ID=A.CITYID
--JOIN TOWNS T ON T.ID=A.TOWNID
--JOIN DISTRICT D ON D.ID=A.DISTRICTID


--Örnekler
--Şehirlere göre verilen siparişleri toplam olarak listeleme
--SELECT  CT.CITY, SUM(O.TOTALPRICE) SIPARIS_TUTARI, COUNT(O.ID) SIPARIS_SAYISI FROM ORDERS O JOIN ADDRESS A ON A.ID=O.ADDRESSID 
--JOIN CITIES CT ON CT.ID=A.CITYID GROUP BY CT.CITY

--Siparişlerin ortalama kargolama sürelerini getirme
--select AVG(DATEDIFF(HOUR,O.DATE_,I.DATE_))) HAZIRLIKSURESI FROM ORDERS O JOIN INVOICES I ON I.ORDERID=O.ID

--Şehirlere göre siparişlerin ortalama kargolama sürelerini getirme
--select CT.CITY SEHIR, AVG(DATEDIFF(HOUR,O.DATE_,I.DATE_))) HAZIRLIKSURESI FROM ORDERS O JOIN INVOICES I ON I.ORDERID=O.ID JOIN ADDRESS A ON A.ID=O.ADDRESSID JOIN CITIES CT ON CT.ID=A.CITYID
--GROUP BY CT.CITY

--Yaş gruplarına göre sipariş dağılımı
--SELECT DATEDIFF(YEAR,U.BIRTHDATE,GETDATE()) YAS, 
--CASE
-- WHEN DATEDIFF(YEAR,U.BIRTHDATE,GETDATE()) BETWEEN 20 AND 30 THEN '20-30 YAS ARASI'
-- WHEN DATEDIFF(YEAR,U.BIRTHDATE,GETDATE()) BETWEEN 31 AND 50 THEN '31-50 YAS ARASI'
-- WHEN DATEDIFF(YEAR,U.BIRTHDATE,GETDATE())>>50 THEN '50-90 YAS ARASI'
--END AS YASARALIGI

--SELECT YASARALIGI,SUM(SIPARISTOPLAMI) SIPARISTOPLAMI FROM 
(
SELECT 
DATEDIFF(YEAR,U.BIRTHDATE,GETDATE()) YAS, 
CASE
 WHEN DATEDIFF(YEAR,U.BIRTHDATE,GETDATE()) BETWEEN 20 AND 30 THEN '20-30 YAS ARASI'
 WHEN DATEDIFF(YEAR,U.BIRTHDATE,GETDATE()) BETWEEN 31 AND 50 THEN '31-50 YAS ARASI'
 WHEN DATEDIFF(YEAR,U.BIRTHDATE,GETDATE())>>50 THEN '50-90 YAS ARASI'
END AS YASARALIGI
SUM (O.TOTALPRICE) SIPARISTOPLAMI FROM USERS U JOIN ORDERS O ON O.USERID=U.ID 
GROUP BY DATEDIFF(YEAR,U.BIRTHDATE,GETDATE())
) T
GROUP BY YASARALIGI 
ORDER BY YAS ARALIGI

--SUBQUERY:İÇ İÇE SELECT 
--BİR SQL CÜMLESİNİN BİR KOLON OLARAK DÖNMESİ İŞLEMİ
SELECT U.ID,U.NAMESURNAME,
(SELECT SUM(TOTALPRICE) FROM ORDERS WHERE USERID=U.ID) SIPARISTOPLAMI,
(SELECT COUNT(*) FROM ORDERS WHERE USERID=U.ID) SIPARISSAYISI
FROM USERS U

--SUBQUERY İLE BİR MÜŞTERİNİN EN SON ALIŞVERİŞ YAPTIĞI ADRESİ GETİRME
SELECT U.ID, U.NAMESURNAME,
(SELECT TOP 1 A.ADDRESSTEXT FROM ORDERS O
JOIN ADDRESS A ON A.ID=O.ADDRESSID 
WHERE O.USERID=U.ID  
ORDER BY O.DATE_ DESC
) SONADRES
FROM USERS U

--Alıştırmalar
--CUSTOMERS isimli tabloda COUNTRY isimli yeni bir kolon açmış olalım. City kolonundaki tüm şehirler Türkiye’de olduğu için COUNTRY kolonundaki tüm alanı TÜRKİYE olarak güncellemek için yazılması gereken QUERY  nedir?
UPDATE CUSTOMERS SET COUNTRY='TÜRKİYE'

--CUSTOMER isimli tabloda  AGE  isimli yeni bir kolon açmış olalım. AGE alanı default(null) gelsin. AGE kolonundaki alanlara,  tabloda yer alan kişilerin doğum tarihlerinin bulunduğu BIRTHDATE kolonunu da kullanarak kişilerin kaç yaşında olduğu bilgisini getiren QUERY hangisidir?
UPDATE CUSTOMER SET AGE=DATEDIFF(YEAR,BIRTHDATE,GETDATE())

--CUSTOMER isimli tabloda şehri ANKARA olmayanları getirmek için yazılması gereken QUERY?
SELECT * FROM CUSTOMER WHERE NOT CITY='ANKARA'

--CUSTOMER isimli tabloda ismi A ve B ile başlayanları getiren QUERY ?
SELECT * FROM CUSTOMER WHERE NAMESURNAME BETWEEN 'A' AND 'C'

--CUSTOMER isimli tabloda ismi ALİ ile başlayanları getiren QUERY
SELECT * FROM CUSTOMER WHERE NAMESURNAME LIKE 'ALİ%'

--CUSTOMER isimli tabloda, İstanbul’da yaşayan ilçesi Avcılar olan yada cinsiyeti erkek olanları getiren QUERY
SELECT * FROM CUSTOMER WHERE CITY='ISTANBUL' AND (DISTRICT='AVCILAR' OR GENDER='E')

--CUSTOMER isimli tabloda GENDER kolonunda cinsiyeti E olarak yer alanları ERKEK, K olarak yer alanları KADIN olarak tutmaya karar verdik. Bu güncellemeyi yapan QUERY
UPDATE CUSTOMER SET GENDER='ERKEK' WHERE GENDER='E'
UPDATE CUSTOMER SET GENDER='KADIN' WHERE GENDER='K'

