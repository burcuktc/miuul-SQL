SENARYO-1

--SORU 1: Customers isimli bir veritabanı oluşturunuz.

CREATE DATABASE CUSTOMERS

--SORU 2: Customers tablosundan adı ‘A’ harfi ile başlayan 
--kişileri çeken sorguyu yazınız.

SELECT * FROM CUSTOMERS 
WHERE CUSTOMERNAME LIKE 'A%'

--SORU 3: 1990 ve 1995 yılları arasında doğan müşterileri
--çekiniz. 1990 ve 1995 yılları dahildir.

SELECT * FROM CUSTOMERS 
WHERE BIRTHDATE>='1990-01-01' AND BIRTHDATE<='1995-12-31'

YA DA;

SELECT * FROM CUSTOMERS 
WHERE BETWEEN BIRTHDATE '1990-01-01' AND '1995-12-31'

YA DA;

SELECT * FROM CUSTOMERS 
WHERE YEAR(BIRTHDATE)>=1990 AND YEAR(BIRTHDATE)<=1995


--SORU 4: İstanbul’da yaşayan kişileri Join kullanarak getiren
--sorguyu yazınız.

SELECT C.*,CT.CITY FROM CUSTOMERS C
INNER JOIN CITIES CT ON C.CITYID=CT.ID
WHERE CT.CITY='İSTANBUL'


--SORU 5: İstanbul’da yaşayan kişileri subquery kullanarak 
--getiren sorguyu yazınız.

SELECT
(SELECT CITY FROM CITIES WHERE ID=C.CITYID),
* FROM CUSTOMERS C

WHERE
(SELECT CITY FROM CITIES WHERE CITY='İSTANBUL'

YA DA ;

SELECT * FROM CUSTOMERS C

WHERE C.CITYID 
IN(SELECT ID FROM CITIES WHERE ID=C.CITYID)='İSTANBUL'


--SORU 6: Hangi şehirde kaç müşterimizin olduğu bilgisini getiren
--sorguyu yazınız.

SELECT CT.CITY,COUNT(C.ID) AS CUSTOMERCOUNT FROM CUSTOMERS C
LEFT JOIN CITIES CT ON CT.ID=C.CITYID
GROUP BY CT.CITY

YA DA;

SELECT *,
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=CT.ID AS CUSTOMERCOUNT
FROM CITIES CT
	

--SORU 7: 10’dan fazla müşterimiz olan şehirleri müşteri sayısı
--ile birlikte müşteri sayısına göre fazladan aza doğru sıralı
--şekilde getiriniz.

SELECT CT.CITY,COUNT(C.ID) AS CUSTOMERCOUNT FROM CUSTOMERS C 
INNER JOIN CITIES CT ON CT.ID=C.CITYID
GROUP BY CT.CITY 
HAVING COUNT(C.ID)>10
ORDER BY 2 DESC 

YA DA;

SELECT CITY,
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=C.ID)
FROM CITIES C
WHERE 
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=C.ID)>10
ORDER BY 2 DESC

--SORU 8: Hangi şehirde kaç erkek, kaç kadın müşterimizin olduğu bilgisini getiren sorguyu yazınız.

SELECT 
CT.CITY,C.GENDER,COUNT(C.ID) AS CUSTOMERCOUNT 
FROM CUSTOMER C 
INNER JOIN CITIES CT ON CT.ID=C.CITYID
GROUP BY CT.CITY,C.GENDER
ORDER BY CT.CITY,C.GENDER

--SORU 9: Customers tablosuna yaş grubu için yeni bir alan ekleyiniz. Bu işlemi hem management studio ile hem de sql
kodu ile yapınız. Alanı adı AGEGROUP veritipi Varchar(50)

ALTER TABLE CUSTOMERS ADD AGEGROUP VARCHAR(50)

--SORU 10: Customers tablosuna eklediğiniz AGEGROUP alanını 20-35 yaş arası,36-45 yaş arası,46-55 yaş arası,55-65 yaş
arası ve 65 yaş üstü olarak güncelleyiniz.

SELECT

*,DATEDIFF(YEAR,BIRTHDATE,GETDATE()) FROM CUSTOMERS 
UPDATE CUSTOMERS SET AGEGROUP='20-35 YAŞ'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 20 AND 35 
UPDATE CUSTOMERS SET AGEGROUP='36-45 YAŞ'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 36 AND 45 
UPDATE CUSTOMERS SET AGEGROUP='46-55 YAŞ'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 46 AND 55 
UPDATE CUSTOMERS SET AGEGROUP='55-65 YAŞ'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 55 AND 65 
UPDATE CUSTOMERS SET AGEGROUP='65 YAŞ ÜSTÜ'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE())>65 


--SORU 11:  İstanbul’da yaşayıp ilçesi ‘Kadıköy’ dışında olanları listeleyiniz.

SELECT * FROM CUSTOMERS C 
INNER JOIN CITIES CT ON CT.ID=C.CITYID
INNER JOIN DISTRICTS D ON D.ID=C.DISTRICTID
WHERE CT.CITY='İSTANBUL' AND D.DISTRICT<>'KADIKÖY'
--WHERE CT.CITY='İSTANBUL' AND D.DISTRICT NOT LIKE 'KADIKÖY'
--WHERE CT.CITY='İSTANBUL' AND NOT D.DISTRICT='KADIKÖY'

YA DA SUBQUERY İLE;

SELECT * FROM CUSTOMERS 
WHERE CITYID IN (SELECT ID FROM CITIES WHERE CITY='İSTANBUL')
AND DISTRICTID NOT IN (SELECT ID FROM DISTRICT WHERE DISTRICT='KADIKÖY')


--SORU 12: Müşterilerimizin telefon numalarının operatör bilgisini getirmek istiyoruz. TELNR1 ve TELNR2 alanlarının yanına operatör numarasını (532),(505) gibi getirmek istiyoruz. Bu sorgu için gereken SQL cümlesini yazınız.

SELECT *,
SUBSTRING (TELNR1,1,5) AS OPERATOR1,
SUBSTRING (TELNR2,1,5) AS OPERATOR2
FROM CUSTOMERS


--SORU 13: Müşterilerimizin telefon numaralarının operatör bilgisini getirmek istiyoruz. Örneğin telefon numaraları “50”
ya da “55” ile başlayan “X” operatörü “54” ile başlayan “Y” operatörü “53” ile başlayan “Z” operatörü olsun.
Burada hangi operatörden ne kadar müşterimiz olduğu bilgisini getirecek sorguyu yazınız.


SELECT 
SUM(TELNR1_XOPERATORCOUNT+TELNR2_XOPERATORCOUNT) AS XOPERATORCOUNT,
SUM(TELNR1_YOPERATORCOUNT+TELNR2_YOPERATORCOUNT) AS YOPERATORCOUNT, 
SUM(TELNR1_ZOPERATORCOUNT+TELNR2_ZOPERATORCOUNT) AS ZOPERATORCOUNT
FROM 
(
SELECT 
  CASE 
       WHEN TELNR1 LIKE '(50% OR TELNR1 LIKE '(55% THEN 1 ELSE 0 
END AS TELNR1_XOPERATORCOUNT,
  CASE 
       WHEN TELNR1 LIKE '(54% THEN 1 
END AS TELNR1_YOPERATORCOUNT,
  CASE 
       WHEN TELNR1 LIKE '(53% THEN 1 
END AS TELNR1_ZOPERATORCOUNT,  

CASE 
       WHEN TELNR2 LIKE '(50% OR TELNR2 LIKE '(55% THEN 1 ELSE 0 
END AS TELNR2_XOPERATORCOUNT,
  CASE 
       WHEN TELNR2 LIKE '(54% THEN 1 
END AS TELNR2_YOPERATORCOUNT,
  CASE 
       WHEN TELNR2 LIKE '(53% THEN 1 
END AS TELNR2_ZOPERATORCOUNT,


TELNR1,TELNR2


* FROM CUSTOMERS 
) T

--SORU 14: Her ilde en çok müşteriye sahip olduğumuz ilçeleri müşteri sayısına göre çoktan aza doğru sıralı şekilde
şekildeki gibi getirmek için gereken sorguyu yazınız.

SELECT CT.CITY,D.DISTRICT,COUNT(C.ID) AS CUSTOMERCOUNT 
FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
INNER JOIN DISTRICT D ON D.ID=C.DISTRICTID
GROUP BY CT.CITY,D.DISTRICT
ORDER BY CT.CITY, COUNT(C.ID) DESC
--ORDER BY 1,3 DESC


--SORU 15: Müşterilerin doğum günlerini haftanın günü(Pazartesi, Salı, Çarşamba..) olarak getiren sorguyu yazınız.

SET LANGUAGE Turkish
SELECT
CUSTOMERNAME,DATENAME(DW,BIRTDATE) BIRTHDAY
FROM CUSTOMERS

----------------------------------------------------------------

SENARYO-2

--SORU 1: HR isimli bir veritabanı oluşturunuz.

CREATE DATABASE HR


--SORU 2: Şirketimizde halen çalışmaya devam eden çalışanların listesini getiren sorgu hangisidir?
Not:İşten çıkış tarihi boş olanlar çalışmaya devam eden çalışanlardır.

SELECT * FROM PERSON WHERE OUTDATE İS NULL


--SORU 3:Şirketimizde departman bazlı halen çalışmaya devam eden çalışan sayısını getiren sorguyu yazınız?

SELECT DEPARTMENT,
(SELECT COUNT(*) FROM PERSON WHERE DEPARTMENTID=D.ID AND OUTDATE IS NULL) AS TOTAL_PERSONCOUNT,
FROM
DEPARTMENT D 
ORDER BY D.DEPARTMENT


--SORU 4:Şirketimizde departman bazlı halen çalışmaya devam KADIN ve ERKEK sayılarını getiren sorguyu yazınız.

SELECT DEPARTMENT,
(SELECT COUNT(*) FROM PERSON WHERE DEPARTMENTID=D.ID AND GENDER='E' AND OUTDATE IS NULL) AS MALE_PERSONCOUNT,
(SELECT COUNT(*) FROM PERSON WHERE DEPARTMENTID=D.ID AND GENDER='K' AND OUTDATE IS NULL) AS FEMALE_PERSONCOUNT,
FROM
DEPARTMENT D 
ORDER BY D.DEPARTMENT


--SORU 5:Şirketimizin Planlama departmanına yeni bir şef ataması yapıldı ve maaşını belirlemek istiyoruz. Planlama
departmanı için minimum,maximum ve ortalama şef maaşı getiren sorgu hangisidir? (Not:işten çıkmış olan
personel maaşları da dahildir.)

SELECT
POS.POSITION,MIN(P.SALARY) AS MIN_SALARY,
MAX(P.SALARY) AS MAX_SALARY,
ROUND(AVG(P.SALARY),2) AS AVG_SALARY
FROM POSITION POS
INNER JOIN PERSON P ON P.POSITIONID=POS.ID
WHERE POS.POSITION='PLANLAMA ŞEFİ'
GROUP BY POS.POSITION

YA DA SUBQUERY İLE;

SELECT
POS.POSITION,
(SELECT MİN(SALARY) FROM PERSON WHERE POSITIONID=POS.ID) AS MIN_SALARY,
(SELECT MAX(SALARY) FROM PERSON WHERE POSITIONID=POS.ID) AS MAX_SALARY,
(SELECT ROUND(AVG(SALARY),0) FROM PERSON WHERE POSITIONID=POS.ID) AS AVG_SALARY

FROM POSITION POS

WHERE POS.POSITION='PLANLAMA ŞEFİ'


--SORU 6:Her bir pozisyonda mevcut halde çalışanlar olarak kaç kişi ve ortalama maaşlarının ne kadar olduğunu
listelettirmek istiyoruz. Sonucu getiren sorguyu yazınız.

SELECT
POS.POSITION,COUNT(P.ID) AS PERSONCOUNT,
ROUND(AVG(P.SALARY),0) AS AVG_SALARY

FROM POSITION POS
INNER JOIN PERSON P ON P.POSITIONID=POS.ID
GROUP BY POS.POSITION
ORDER BY POS.POSITION

YA DA SUBQUERY İLE;

SELECT
POS.POSITION,
(SELECT COUNT(*) FROM PERSON WHERE POSITIONID=POS.ID) AS PERSONCOUNT,
(SELECT ROUND(AVG(SALARY),0) FROM PERSON WHERE POSITIONID=POS.ID) AS AVGSALARY
FROM POSITION POS
ORDER BY POS.POSITION


--SORU 7:Yıllara göre işe alınan personel sayısını kadın ve erkek bazında listelettiren sorguyu yazınız.

SELECT DISTINCT YEAR(P.INDATE) YEAR_,
(SELECT COUNT(*) FROM PERSON WHERE GENDER='E' AND YEAR(INDATE)=YEAR(P.INDATE)) AS MALE_PERSONCOUNT,
(SELECT COUNT(*) FROM PERSON WHERE GENDER='K' AND YEAR(INDATE)=YEAR(P.INDATE)) AS FEMALE_PERSONCOUNT
FROM PERSON P
ORDER BY 1


--SORU 8:Maaş ortalaması 5.500 TL’den fazla olan departmanları listeleyecek sorguyu yazınız.

SELECT
D.DEPARTMENT,ROUND(AVG(P.SALARY),0) AS AVGSALARY
FROM DEPARTMENT D 
INNER JOIN PERSON P ON P.DEPARTMENTID=D.ID
GROUP BY D.DEPARTMENT
HAVING AVG(P.SALARY)>5500

YA DA;

SELECT *,
ROUND((SELECT AVG(SALARY) FROM PERSON WHERE DEPARTMENTID=D.ID),0) AS AVGSALARY FROM DEPARTMENT D

WHERE (SELECT AVG(SALARY) FROM PERSON WHERE DEPARTMENTID=D.ID)>5500 

YA DA;

SELECT * FROM
(
SELECT
D.DEPARTMENT,ROUND(AVG(P.SALARY),0) AS AVGSALARY
FROM DEPARTMENT D 
INNER JOIN PERSON P ON P.DEPARTMENTID=D.ID
GROUP BY D.DEPARTMENT
) T WHERE AVGSALARY>5500


--SORU 9:Her personelin adını, pozisyonunu bağlı olduğu birim yöneticisinin adını ve pozisyonunu yönetici pozisyonunu
getiren sorguyu yazınız.

SELECT 
P.NAME_+' '+P.SURNAME AS PERSON,POS.POSITION
P2.NAME_+' '+P2.SURNAME AS MANAGERNAME,P0S2.POSITION AS MANAGERPOSITION

FROM PERSON P
INNER JOIN POSITION POS ON POS.ID=P.POSITIONID
INNER JOIN PERSON P2 ON P.MANAGERID=P2.ID
INNER JOIN POSITION POS2 ON POS2.ID=P2.POSITIONID


--SORU 10:Departmanların ortalama kıdemini ay olarak hesaplayacak sorguyu yazınız.


SELECT DEPARTMENT,AVG(WORKINGTIME)
FROM
(
SELECT D.DEPARTMENT,
CASE WHEN OUTDATE IS NOT NULL THEN DATEDIFF(MONTH,INDATE,OUTDATE)
ELSE DATEDIFF(MONTH,INDATE,GETDATE()) END AS WORKINGTIME
FROM PERSON P
INNER JOIN DEPARTMENT D ON D.ID=P.DEPARTMENTID
) T GROUP BY DEPARTMENT
ORDER BY 1
