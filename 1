--Veritabanı,Veritabanı Yönetim Sistemi, İlişkisel Veritabanı, SQL Dili, Transact SQL 
--SQL (Structred Query Language-Yapısal Sorgulama Dili)
--Veritabanı:Verileri listeler halinde tablo ve satırlarda tutan yapılardır. Veritabanının temel bileşenleri; tablolar,satırlar,sütunlar,indexler
--Her veritabanı yönetim sistemi bir veritabanıdır. Excel bir veritabanı iken, MS SQL,MYSQL,POSTGRESQL bir veritabanı yönetim sistemidir.
--veritabanından veriyi okurken bir takım kaynaklara ihtiyaç duyarız: CPU,RAM gibi ham haldeki veriyi sorgulamak ve analiz etmek için kullaınılır. Ancak bir veritabanı yönetim sisteminde bir veritabanı sunucu ile konuşuruz.
--veriyi getirmesini onun anlayacağı bir dil ile söyleriz ve bu sistem tamamen kendi kaynaklarını kullanarak veriyi bize gönderir. Biz veritabanı sunucunun bu işi nasıl yaptığı ile ilgilenmeyiz.
--Oracle, MSSQL,MYSQL, postgreSQL birer veritabanı yönetim sistemidir. Bu sistemler SQL dilini de içeren kendilerine özel diller geliştirmişlerdir. Örneğin oracle için PL SQL, msSQL için T-SQL dilleri mevcuttur.
--Veritabanı  sunucu:bir donanım değil yazılımdır. Veritabanı yönetim sistemlerinin yaptığı her şey veritabanı sunucu üzerinde gerçekleşir.
-----Veritabanı sunucu ile haberleşme----
--İstemci bilgisayar bir veritabanı sunucudan bir veriyi sorgulamak istiyor. Öncelikle veritabanı sunucuya bağlanması gerekir. Yine bunun için hem sunucu hem istemcinin aynı ağda olması gerekir. 
--İstemci bilgisayar veritaban sunucuya bir bağlantı isteği gönderir (kullanıcı adı ve şifre vererek) bağlantı isteği sunucu tarafından kontrol edilir sistemde bu kullanıcı adı ve şifreye ait kullanıcı yok ise sistem bağlantıyı otomatik reddeder. Var ise bağlantıyı kabul eder ve üzerinde işlem gerçekleştirmesine izin verir.
 
 --İlişkisel Veritabanı (RDMS)
 --Tekrar eden verileri tekilleştirmek amacıyla yapılandırılan veritabanı sistemleridir.
 --Tekrar eden verileri sürekli girmekten kaynaklanan emek ve iş gücü kaybını, gereksiz yer israfını engellemek, Veride güncelleme gerektiğinde geçmişe dönük olarak güncelleme yapılması zor olması gibi sebeplerden kullanılır.

 --
 --SQL SERVER'a bağlanmak için 1)windows authenticitaion, 2)sql server authenticitaion (kullanıcı adı ve şifre ister)

 --Veri Tipleri
 --Tam sayı veri tipleri
 --bigint(-2^63 ile 2^63 arasında, 8byte, int (-2 milyar ile +2 milyar arasında, 4 byte yer kaplar),smallint (-2^15 ile 2^15, 2 byte) , tinyint (0 ile 255, 1byte), bit(0 ya da 1, 1 veya 2 byte)

--Metin veri tipleri
 --char (örneğin char50 ise ne yazarsak yazalım hafızada 50 karakterlik yer tutar) , varchar, nchar, nvarchar
 --uzunluğu sabit olan tc,tel no gibi durumlarda char kullanabiliriz. Fakat isim,email,adres gibi uzunluğu belli olmayan yapılarda varchar kullanmak uygundur.
--özgeçmiş gibi çok uzun verileri tutmak için varcharmax kullanılabilir

--ondalık sayı veri tipleri
--float (virgül ile birlikte toplam 18 karakter tutabilir), decimal (18,4 ise örneğin 18 karakter virgülden sonra 4 karakter tutabilir),money,real,smallmoney

--tarihsaat veritipleri
--datetime (1753-9999 yılı), datetime2 (mikrosaniye seviyesinde daha hassas süre),datetimeoffset (yerel saat ile ilgilidir),time,date (9999 yılına kadardır 4 byte yer kaplar), smalldate(1900-2079 arası 3 byte yer kaplar)

--diğer veritipleri
--image (veritabanında dosya tutmak için, eski sürümdür şuanda varbinarymax kullanılır)
--binary,varbinary,varbinarymax binary şeklindeki yapıları tutmak için kullanılır herhangi bir dosya verisini veritabanında tutmak için kullanılır.)
--xml sorgulanabilir veriler için, table
--uniqueidentifier:tekilliği sağlamak amacıyla kullanılır. select NEWID scriptini çalıştırdığımızda GUID (global olarak tekilliği garanti eder) veri oluşturur.
--hierarchyid:hiyerarşik pozisyonları temsil etmek için.
--geography:dünyadaki koordinat sistemini tutar.
--geometry:çeşitli 2 boyutlu geometrik şekilleri vektör olarak veritabanında tutmak için alan yer hesaplamada kullanılır.

